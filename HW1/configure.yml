---
- hosts: all
  tasks:

  # Update the Ubuntu Server
  - name: "install aptitude"
    apt:
      name: aptitude
    become: yes
    become_user: root

  - name: "update and upgrade using apt-get"
    apt:
      update_cache: yes
      upgrade: yes
    become: yes
    become_user: root
    register: upgrade

  - name: "dist-upgrade using apt-get"
    apt:
      upgrade: dist
    become: yes
    become_user: root
    register: dist

  - name: "install required packages"
    apt:
      name: "{{ item }}"
    become: yes
    become_user: root
    with_items:
      - build-essential
      - dkms
      - unzip
      - wget
      - linux-headers-4.4.0-92
      - linux-headers-4.4.0-92-generic
    register: install

  # - name: "reboot"
  #   shell: reboot
  #   become: yes
  #   become_user: root
  #   register: reboot
  #   when: (upgrade.changed) or (dist.changed) or (install.changed)

  # - name: "wait for machine to start"
  #   local_action: wait_for host="{{ ansible_ssh_host }}" state=started timeout=300
  #   when: reboot.changed

  # Install VirtualBox 
  - name: "edit source list"
    blockinfile:
      path: /etc/apt/sources.list
      block: |
        deb http://download.virtualbox.org/virtualbox/debian xenial contrib
    become: yes
    become_user: root
    register: edit_source
  
  - name: "add public key"
    apt_key:
      url: "https://www.virtualbox.org/download/oracle_vbox_2016.asc"
      state: present
    become: yes
    become_user: root
    register: add_public_key

  - name: "update using apt-get"
    apt:
      update_cache: yes
    become: yes
    become_user: root
    register: update

  - name: "install virtual box 5.0"
    apt:
      name: "virtualbox-5.0"
      allow_unauthenticated: yes
    become: yes
    become_user: root
    register: install_virtualbox

  - name: "add user to vboxusers group"
    user:
      name: vagrant
      groups: vboxusers
      append: yes
    become: yes
    become_user: root

  # - name: "check virtualbox kernel module status"
  #   command: /etc/init.d/vboxdrv status
  #   register: virtualbox_status
  #   failed_when: "'VirtualBox kernel modules (vboxdrv, vboxnetflt, vboxnetadp, vboxpci) are loaded' not in virtualbox_status.stdout"
  #   ignore_errors: yes
  #   become: yes
  #   become_user: root
  
  # - name: "start virtualbox kernel modules"
  #   command: /etc/init.d/vboxdrv setup
  #   register: virtualbox_start
  #   become: yes
  #   become_user: root
  #   when: virtualbox_status.failed

  # - name: "retry virtualbox kernel module status"
  #   command: /etc/init.d/vboxdrv status
  #   register: retry_virtualbox_status
  #   failed_when: "'VirtualBox kernel modules (vboxdrv, vboxnetflt, vboxnetadp, vboxpci) are loaded' not in virtualbox_status.stdout"
  #   become: yes
  #   become_user: root
  #   when: virtualbox_status.failed
  
  # Install VirtualBox extensions
  - name: "download virtualbox extension pack"
    get_url:
      url: http://download.virtualbox.org/virtualbox/5.0.24/Oracle_VM_VirtualBox_Extension_Pack-5.0.24-108355.vbox-extpack
      dest: /home/vagrant

  - name: "install virtualbox extension pack"
    shell: yes | sudo VBoxManage extpack install /home/vagrant/Oracle_VM_VirtualBox_Extension_Pack-5.0.24-108355.vbox-extpack
    register: install_virtualbox_extension
    changed_when: "'Successfully installed' in install_virtualbox_extension.stdout"
    failed_when: not (("'Successfully installed' not in install_virtualbox_extension.stdout") or ("'is already installed' not in install_virtualbox_extension.stderr"))
  
  - name: "remove downloaded file"
    file:
      path: /home/vagrant/Oracle_VM_VirtualBox_Extension_Pack-5.0.24-108355.vbox-extpack
      state: absent

  # Install phpVirtualBox
  - name: "install requisites for phpVirtualBox"
    apt:
      name: "{{ item }}"
    become: yes
    become_user: root
    with_items:
      - apache2
      - php
      - php-mysql
      - libapache2-mod-php
      - php-soap
      - php-xml
    register: prereq_phpVirtualBox

  - name: "download phpVirtualBox zip"
    get_url:
      url: https://sourceforge.net/projects/phpvirtualbox/files/phpvirtualbox-5.0-5.zip
      dest: /home/vagrant

  - name: "extract phpVirtualBox zip to apache root folder"
    unarchive:
      src: /home/vagrant/phpvirtualbox-5.0-5.zip
      dest: /home/vagrant/
      mode: 0777
      remote_src: yes
    # become: yes
    # become_user: root

  - name: "remove phpVirtualBox folder if it exists"
    file:
      path: /var/www/html/phpvirtualbox
      state: absent
    become: yes
    become_user: root

  - name: "move phpVirtualBox folder"
    command: mv /home/vagrant/phpvirtualbox-5.0-5 /var/www/html/phpvirtualbox
    become: yes
    become_user: root

  - name: "remove unzipped folder"
    file:
      path: /home/vagrant/phpvirtualbox-5.0-5
      state: absent

  - name: "remove downloaded zip file"
    file:
      path: /home/vagrant/phpvirtualbox-5.0-5.zip
      state: absent

  - name: "copy config file"
    copy:
      src: /var/www/html/phpvirtualbox/config.php-example
      dest: /var/www/html/phpvirtualbox/config.php
      remote_src: yes
      mode: 0777

  - name: "update username and password in config"
    replace:
      path: /var/www/html/phpvirtualbox/config.php
      regexp: 'var.*username.*;\nvar.*password.*;'
      replace: "var $username = 'vagrant';\nvar $password = 'vagrant';"

  - name: "create a new file"
    blockinfile:
      path: /etc/default/virtualbox
      block: |
        VBOXWEB_USER=vagrant
      create: yes
    become: yes
    become_user: root

  - name: "stop services"
    service:
      name: "{{ item }}"
      state: stopped
    with_items:
      - apache2
      - vboxdrv
      - vboxweb-service
    become: yes
    become_user: root

  - name: "start services"
    service:
      name: "{{ item }}"
      state: started
    with_items:
      - vboxweb-service
      - vboxdrv
      - apache2
    become: yes
    become_user: root

  # Install vagrant, ansible, git
  - name: "install vagrant, ansible and git"
    apt:
      name: "{{ item }}"
    become: yes
    become_user: root
    with_items:
      - vagrant
      - ansible
      - git
    register: install_vagrant

# Provision new virtual machines 

...